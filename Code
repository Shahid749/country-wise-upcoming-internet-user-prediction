import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from sklearn.linear_model import LinearRegression
from sklearn.preprocessing import PolynomialFeatures
from sklearn.metrics import mean_squared_error, mean_absolute_error, r2_score
df = pd.read_csv('india1.csv')

# Create a dictionary to store the results
results = {}

# for each country
for country in df['Country'].unique():

    data = df[df['Country'] == country]

    # Split the data into training and testing sets
    X_train = data[data['year'] <= 2016]['year'].values.reshape(-1, 1)
    y_train = data[data['year'] <= 2016]['user'].values

    # polynomial features to the input data
    poly_features = PolynomialFeatures(degree=2)
    X_train_poly = poly_features.fit_transform(X_train)

    # polynomial regression model
    model = LinearRegression()
    model.fit(X_train_poly, y_train)

    # predictions for the years 2017 to 2025
    X_pred = np.arange(2017, 2026).reshape(-1, 1)
    X_pred_poly = poly_features.transform(X_pred)
    y_pred = model.predict(X_pred_poly)

    # model's accuracy and error
    mse = mean_squared_error(y_train, model.predict(X_train_poly))
    mae = mean_absolute_error(y_train, model.predict(X_train_poly))
    r2 = r2_score(y_train, model.predict(X_train_poly))

    # results
    plt.plot(data['year'], data['user'], label='Actual')
    plt.plot(X_pred, y_pred, label='Predicted')
    plt.title(f'{country} user')
    plt.xlabel('year')
    plt.ylabel('user')
    plt.legend()
    plt.show()

    # Save the results to the dictionary
    results[country] = {'predictions': y_pred, 'accuracy': r2, 'mse': mse, 'mae': mae}

# results
for country, result in results.items():
    print(f'{country} predictions for 2017 to 2025: {result["predictions"]}')
    print(f'{country} accuracy: {result["accuracy"]}')
    print(f'{country} mean squared error: {result["mse"]}')
    print(f'{country} mean absolute error: {result["mae"]}\n')

